"""Añadir access_token y token_expiration

Revision ID: ce8602a595ab
Revises: 
Create Date: 2025-01-27 17:03:11.773947

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'ce8602a595ab'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    # Verificar si la tabla ya existe antes de crearla
    connection = op.get_bind()
    inspector = sa.inspect(connection)
    existing_tables = inspector.get_table_names()
    
    if 'user' not in existing_tables:
        op.create_table('user',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('username', sa.String(length=50), nullable=False),
        sa.Column('password', sa.String(length=255), nullable=False),
        sa.Column('name', sa.String(length=100), nullable=True),
        sa.Column('lastname', sa.String(length=100), nullable=True),
        sa.Column('access_token', sa.Text(), nullable=True),
        sa.Column('token_expiration', sa.DateTime(), nullable=True),
        sa.PrimaryKeyConstraint('id'),
        sa.UniqueConstraint('username')
        )
        print("Tabla 'user' creada")
    else:
        print("Tabla 'user' ya existe, saltando creación")
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    # Verificar si la tabla existe antes de eliminarla
    connection = op.get_bind()
    inspector = sa.inspect(connection)
    existing_tables = inspector.get_table_names()
    
    if 'user' in existing_tables:
        op.drop_table('user')
        print("Tabla 'user' eliminada")
    else:
        print("Tabla 'user' no existe, saltando eliminación")
    # ### end Alembic commands ###
