"""crear_tabla_accounts

Revision ID: 85bae8d-efcf9
Revises: 7adac5c2b7c
Create Date: 2025-10-01 06:30:00.000000

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '85bae8defcf9'
down_revision = '7adac5c2b7c'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    # Verificar si la tabla ya existe antes de crearla
    connection = op.get_bind()
    inspector = sa.inspect(connection)
    existing_tables = inspector.get_table_names()
    
    if 'account' not in existing_tables:
        op.create_table('account',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('user_agent', sa.Text(), nullable=False),
        sa.Column('email', sa.String(length=255), nullable=False),
        sa.Column('password', sa.String(length=255), nullable=False),
        sa.Column('cookie', sa.Text(), nullable=False),
        sa.Column('created_at', sa.DateTime(), nullable=False),
        sa.Column('updated_at', sa.DateTime(), nullable=False),
        sa.Column('user_id', sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
        sa.PrimaryKeyConstraint('id')
        )
        print("Tabla 'account' creada")
        
        # Crear índices solo si la tabla se creó
        op.create_index('idx_account_created', 'account', ['created_at'], unique=False)
        op.create_index('idx_account_email', 'account', ['email'], unique=False)
        op.create_index('idx_account_user_created', 'account', ['user_id', 'created_at'], unique=False)
        op.create_index('idx_account_user_id', 'account', ['user_id'], unique=False)
        print("Índices de la tabla 'account' creados")
    else:
        print("Tabla 'account' ya existe, saltando creación")
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    # Verificar si la tabla existe antes de eliminarla
    connection = op.get_bind()
    inspector = sa.inspect(connection)
    existing_tables = inspector.get_table_names()
    
    if 'account' in existing_tables:
        op.drop_index('idx_account_user_id', table_name='account')
        op.drop_index('idx_account_user_created', table_name='account')
        op.drop_index('idx_account_email', table_name='account')
        op.drop_index('idx_account_created', table_name='account')
        op.drop_table('account')
        print("Tabla 'account' eliminada")
    else:
        print("Tabla 'account' no existe, saltando eliminación")
    # ### end Alembic commands ###
